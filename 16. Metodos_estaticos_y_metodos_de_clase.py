# -*- coding: utf-8 -*-
"""16. Metodos Estaticos y Metodos de Clase.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rcJzBY1WyXmZZRy7V3ShYzwc0-WNt_3K
"""

# Creacion de una Calculadora con Metodos estaticos que no requieran las instancias de objetos


class Calculadora:

  @staticmethod # No se condiciona a los ingresos y conceptos de un objeto, no requiere atributos
  def suma(a,b):
    return a+b

  @staticmethod
  def resta(a,b):
    return a-b

  @staticmethod
  def multiplicacion(a,b):
    return a*b

  @staticmethod
  def division(a,b):
    if b == 0:
      return "No se puede dividir por cero"
    else:
      return a/b




print(Calculadora.suma(2,3))
print(Calculadora.resta(2,3))
print(Calculadora.multiplicacion(2,3))
print(Calculadora.division(2,4))

# Utilizacion de Metodos de clase

class Automovil:

  def __init__(self, marca, modelo):
    self.marca = marca
    self.modelo = modelo

  @classmethod
  def deportivo(cls,marca):

    return cls(marca,"Deportivo")

  @classmethod
  def sedan(cls,marca):

    return cls(marca,"Sedan")

  def __str__(self):
    return f"La marca {self.marca}  es un modelo {self.modelo}"

deportivo1 = Automovil.deportivo("Ferrari")

sedan1 = Automovil.sedan("Toyota")


print(deportivo1)
print(sedan1)

# Ejemplo con variables de clase

class Estudiantes:

  estudiantes = []

  def __init__(self,nombre,edad):
    self.nombre = nombre
    self.edad = edad

    Estudiantes.estudiantes.append(self)

  @staticmethod
  def es_mayor_edad(edad):
    return edad >= 18

  @classmethod
  def crearEstudiante(cls,nombre,edad):
     if cls.es_mayor_edad(edad):
            return cls(nombre,edad)
     else:
      print("El estudiante no es mayor de edad")

  @staticmethod
  def mostrarEstudiantes():
      for i, estudiante in enumerate(Estudiantes.estudiantes): #Para realizar la enumeracion de los objetos dados en la lista
        print(f"\n[{i+1}] Nombre: {estudiante.nombre}, Edad: {estudiante.edad}")





Estudiantes.crearEstudiante("Hackermate",43)
Estudiantes.crearEstudiante("s4vitar",28)
Estudiantes.crearEstudiante("Xerosec",12)
Estudiantes.crearEstudiante("Hackavis",8)

Estudiantes.mostrarEstudiantes()